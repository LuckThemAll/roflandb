sudo: true
language: cpp
compiler:
  - gcc
dist: xenial
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.8
    - llvm-toolchain-trusty-6.0
    packages:
    - gcc-8
    - g++-8
    - libboost-all-dev
# the install step will take care of deploying a newer cmake version
install:    
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.2-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.13.2-Linux-x86_64.tar.gz
  - mv cmake-3.13.2-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}
 
script:
  # Export CC and CXX to tell cmake which compiler to use
  - export CC=gcc-8
  - export CXX=g++-8
  - g++ -v && cmake --version
  # create a build folder for the out-of-source build
  - mkdir build
  # switch to build directory
  - cd build
  # run cmake; here we assume that the project's
  # top-level CMakeLists.txt is located at '..'
  - cmake ..
  - make roflandb
  - make tests
  #execute tests
  - ./bin/tests
